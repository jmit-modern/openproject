{"version":3,"sources":["./node_modules/codemirror/mode/xml/xml.js","./node_modules/codemirror/mode/htmlmixed/htmlmixed.js","./node_modules/codemirror/mode/slim/slim.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","quote","closure","baseState","tagName","tagStart","test","eol","isInAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","defineMIME","mimeModes","name","mod","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","copyState","local","line","innerMode","rubyMode","modes","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","push","join","styleMap","closing","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","continueLine","stack","parent","finishContinue","rubyInQuote","endQuote","peek","rubyState","startRubySplat","runSplat","offset","idx","pos","restore","backup","startHtmlLine","lastTokenize","htmlLine","startHtmlMode","comment","skipToEnd","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","readQuoted","sub","subStream","StringStream","string","slice","tabSize","start","lastColumnPos","lastColumnValue","subMode","subState","firstSub","query","factory","createMode","doctypeLine","_state","startLine","commentMode","lineContinuable","m","startSubMode","slimTag","slim","slimTagExtras","slimClass","slimAttribute","startAttributeWrapperMode","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","embed","unescaped","nextTokenize","fresh","escaped","last","blankLine"],"mappings":"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","file":"18.8aca3e78fc28671b75a6.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n"],"sourceRoot":"webpack:///"}