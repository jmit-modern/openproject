{"version":3,"sources":["./node_modules/@sentry/utils/esm/string.js","(webpack)/buildin/harmony-module.js","./node_modules/@sentry/utils/esm/memo.js","./node_modules/@sentry/utils/esm/object.js","./node_modules/@sentry/utils/esm/logger.js","./node_modules/@sentry/utils/esm/misc.js","./node_modules/@sentry/utils/esm/is.js","./node_modules/@sentry/utils/esm/syncpromise.js","./node_modules/@sentry/hub/esm/scope.js","./node_modules/@sentry/types/esm/status.js","./node_modules/@sentry/minimal/esm/index.js","./node_modules/@sentry/utils/esm/polyfill.js","./node_modules/@sentry/utils/esm/error.js","./node_modules/@sentry/core/esm/dsn.js","./node_modules/@sentry/core/esm/api.js","./node_modules/@sentry/core/esm/integration.js","./node_modules/@sentry/core/esm/baseclient.js","./node_modules/@sentry/core/esm/transports/noop.js","./node_modules/@sentry/core/esm/basebackend.js","./node_modules/@sentry/utils/esm/supports.js","./node_modules/@sentry/browser/esm/tracekit.js","./node_modules/@sentry/browser/esm/parsers.js","./node_modules/@sentry/browser/esm/eventbuilder.js","./node_modules/@sentry/utils/esm/promisebuffer.js","./node_modules/@sentry/core/esm/integrations/functiontostring.js","./node_modules/@sentry/browser/esm/transports/base.js","./node_modules/@sentry/browser/esm/transports/fetch.js","./node_modules/@sentry/browser/esm/transports/xhr.js","./node_modules/@sentry/browser/esm/backend.js","./node_modules/@sentry/browser/esm/version.js","./node_modules/@sentry/browser/esm/client.js","./node_modules/@sentry/core/esm/integrations/inboundfilters.js","./node_modules/@sentry/browser/esm/helpers.js","./node_modules/@sentry/browser/esm/integrations/trycatch.js","./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","./node_modules/@sentry/browser/esm/integrations/linkederrors.js","./node_modules/@sentry/browser/esm/integrations/useragent.js","./node_modules/@sentry/browser/esm/sdk.js","./node_modules/@sentry/core/esm/sdk.js","./node_modules/@sentry/browser/esm/index.js","./node_modules/@sentry/hub/esm/span.js","./node_modules/@sentry/hub/esm/hub.js"],"names":["truncate","str","max","length","substr","safeJoin","input","delimiter","Array","isArray","output","i","value","push","String","e","join","isMatchingPattern","pattern","test","indexOf","module","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","Memo","this","_hasWeakSet","WeakSet","_inner","prototype","memoize","obj","has","add","unmemoize","delete","splice","fill","source","name","replacement","original","wrapped","defineProperties","__sentry__","__sentry_original__","__sentry_wrapped__","_Oo","urlEncode","object","keys","map","key","encodeURIComponent","getWalkSource","is","error","err","message","stack","hasOwnProperty","call","type","target","toString","_oO","currentTarget","CustomEvent","detail","jsonSize","encodeURI","split","utf8Length","JSON","stringify","normalizeToSize","depth","maxSize","serialized","normalize","normalizeValue","_events","global","window","document","walk","memo","Infinity","normalized","serializeValue","toJSON","acc","innerKey","parse","extractExceptionKeysForMessage","exception","maxLength","sort","includedKeys","slice","PREFIX","Logger","_enabled","disable","enable","log","args","_i","arguments","console","warn","__SENTRY__","logger","dynamicRequire","mod","request","require","isNodeEnv","process","fallbackGlobalObject","getGlobalObject","self","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","r","Math","random","parseUrl","url","match","query","fragment","host","path","protocol","relative","getEventDescription","event","values","event_id","consoleSandbox","callback","originalConsole","wrappedLevels","forEach","level","result","addExceptionTypeValue","addExceptionMechanism","mechanism","getLocationHref","location","href","oO","htmlTreeAsString","elem","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","parentNode","reverse","className","classes","attr","tagName","toLowerCase","id","attrWhitelist","getAttribute","isError","wat","Error","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","Boolean","then","isSyntheticEvent","States","SyncPromise","executor","_this","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","reason","REJECTED","state","_value","_executeHandlers","_attachHandler","handler","concat","onrejected","onfulfilled","resolve","reject","_","all","collection","counter","resolvedCollection","item","index","TypeError","catch","val","finally","onfinally","isRejected","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","addEventProcessor","_notifyScopeListeners","setTimeout","_notifyEventProcessors","processors","hint","processor","final","setUser","user","setTags","tags","setTag","_a","setExtras","extra","setExtra","setFingerprint","fingerprint","_fingerprint","setLevel","_level","setTransaction","transaction","_transaction","setContext","context","undefined","setSpan","span","_span","startSpan","parentSpan","setParent","getSpan","clone","scope","newScope","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","timestamp","Date","getTime","mergedBreadcrumb","clearBreadcrumbs","_applyFingerprint","applyToEvent","contexts","trace","breadcrumbs","getGlobalEventProcessors","globalEventProcessors","addGlobalEventProcessor","Status","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","callOnHub","method","hub","apply","captureException","syntheticException","originalException","captureMessage","captureEvent","configureScope","extras","withScope","setPrototypeOf","__proto__","proto","prop","_super","SentryError","_newTarget","constructor","DSN_REGEX","Dsn","from","_fromString","_fromComponents","_validate","withPassword","pass","port","projectId","exec","_b","_c","pop","components","component","isNaN","parseInt","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","getRequestHeaders","clientName","clientVersion","header","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","email","installedIntegrations","setupIntegrations","options","integrations","defaultIntegrations","userIntegrations","userIntegrationsNames_1","pickedIntegrationsNames_1","defaultIntegration","userIntegration","getIntegrationsToSetup","integration","setupOnce","setupIntegration","BaseClient","backendClass","_integrations","_processing","_backend","_options","_dsn","_isEnabled","eventId","_getBackend","eventFromException","_processEvent","finalEvent","eventFromMessage","getOptions","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","enabled","getIntegrations","getIntegration","ticked","setInterval","_prepareEvent","environment","release","dist","maxValueLength","prepared","_addIntegrations","sdk","sdkInfo","integrationsArray","beforeSend","sampleRate","data","sendEvent","beforeSendResult","_handleAsyncBeforeSend","processedEvent","NoopTransport","Skipped","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","supportsFetch","Headers","Request","Response","supportsReferrerPolicy","referrerPolicy","UNKNOWN_FUNCTION","gecko","winjs","geckoEval","chromeEval","computeStackTrace","ex","popSize","framesToPop","stacktrace","parts","opera10Regex","opera11Regex","lines","line","element","func","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","STACKTRACE_LIMIT","exceptionFromStacktrace","frames","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","filename","function","in_app","lineno","eventFromUnknownInput","domException","name_1","eventFromString","rejection","__serialized__","frames_1","eventFromPlainObject","synthetic","attachStacktrace","originalFunctionToString","PromiseBuffer","_limit","_buffer","isReady","task","remove","drain","capturedSetTimeout","clearTimeout","BaseTransport","FetchTransport","defaultOptions","body","fetch","response","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","open","send","BrowserBackend","transportOptions","transport","handled","Info","SDK_NAME","BrowserClient","platform","packages","version","showReportDialog","script","createElement","async","src","onLoad","onload","head","appendChild","FunctionToString","Function","DEFAULT_IGNORE_ERRORS","InboundFilters","client","getClient","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","blacklistUrls","whitelistUrls","frames_2","keypressTimeout","lastCapturedEvent","debounceDuration","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","before","sentryWrapped","wrappedArguments","arg","handleEvent","property","getOwnPropertyDescriptor","configurable","debounceTimer","breadcrumbEventHandler","eventName","debounce","captureBreadcrumb","category","keypressEventHandler","isContentEditable","TryCatch","_ignoreOnError","_wrapTimeFunction","originalCallback","getFunctionName","_wrapRAF","_wrapEventTarget","bind","lastHref","Breadcrumbs","dom","history","sentry","xhr","_instrumentConsole","originalConsoleLevel","breadcrumbData","fromString","_instrumentDOM","addEventListener","innerOriginal","_instrumentFetch","isNativeFunc","doc","sandbox","hidden","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchInput","filterUrl","addSentryBreadcrumb","fetchData","toUpperCase","status_code","_instrumentHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","supportsHistory","captureUrlChange","to","parsedLoc","parsedTo","parsedFrom","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","xmlHttpRequestProps","wrapProp","serializedData","event_1","GlobalHandlers","_global","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","msg","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","_eventFromIncompleteRejection","groups","DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","navigator","headers","userAgent","init","window_1","SENTRY_RELEASE","clientClass","debug","bindClient","initAndBind","lastEventId","forceLoad","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS","TRACEPARENT_REGEXP","Span","_traceId","_spanId","_sampled","_parent","substring","parent","setSampled","sampled","fromTraceparent","traceparent","matches","parent_1","toTraceparent","span_id","trace_id","API_VERSION","Hub","_version","_stack","_invokeClient","top","getStackTop","isOlderThan","pushScope","getStack","parentScope","popScope","getScope","_lastEventId","finalHint","beforeBreadcrumb","finalBreadcrumb","min","run","oldHub","makeMain","traceHeaders","getMainCarrier","carrier","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","activeDomain","active","registryHubTopStack","getHubFromActiveDomain"],"mappings":"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","file":"sentry-browser.10135629f6163706a9f6.js","sourcesContent":["import { isRegExp } from './is';\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof str !== 'string' || max === 0) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line:prefer-for-of\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value, pattern) {\n    if (isRegExp(pattern)) {\n        return pattern.test(value);\n    }\n    if (typeof pattern === 'string') {\n        return value.indexOf(pattern) !== -1;\n    }\n    return false;\n}\n//# sourceMappingURL=string.js.map","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo = /** @class */ (function () {\n    function Memo() {\n        // tslint:disable-next-line\n        this._hasWeakSet = typeof WeakSet === 'function';\n        this._inner = this._hasWeakSet ? new WeakSet() : [];\n    }\n    /**\n     * Sets obj to remember.\n     * @param obj Object to remember\n     */\n    Memo.prototype.memoize = function (obj) {\n        if (this._hasWeakSet) {\n            if (this._inner.has(obj)) {\n                return true;\n            }\n            this._inner.add(obj);\n            return false;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < this._inner.length; i++) {\n            var value = this._inner[i];\n            if (value === obj) {\n                return true;\n            }\n        }\n        this._inner.push(obj);\n        return false;\n    };\n    /**\n     * Removes object from internal storage.\n     * @param obj Object to forget\n     */\n    Memo.prototype.unmemoize = function (obj) {\n        if (this._hasWeakSet) {\n            this._inner.delete(obj);\n        }\n        else {\n            for (var i = 0; i < this._inner.length; i++) {\n                if (this._inner[i] === obj) {\n                    this._inner.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    return Memo;\n}());\nexport { Memo };\n//# sourceMappingURL=memo.js.map","import { isElement, isError, isEvent, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { htmlTreeAsString } from './misc';\nimport { truncate } from './string';\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source, name, replacement) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof wrapped === 'function') {\n        try {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __sentry__: {\n                    enumerable: false,\n                    value: true,\n                },\n                __sentry_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n                __sentry_wrapped__: {\n                    enumerable: false,\n                    value: wrapped,\n                },\n            });\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\n/**\n * Transforms any object into an object literal with all it's attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order to be usable by the serializer\n */\nfunction getWalkSource(value) {\n    if (isError(value)) {\n        var error = value;\n        var err = {\n            message: error.message,\n            name: error.name,\n            stack: error.stack,\n        };\n        for (var i in error) {\n            if (Object.prototype.hasOwnProperty.call(error, i)) {\n                err[i] = error[i];\n            }\n        }\n        return err;\n    }\n    if (isEvent(value)) {\n        var source = {};\n        source.type = value.type;\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            source.target = isElement(value.target)\n                ? htmlTreeAsString(value.target)\n                : Object.prototype.toString.call(value.target);\n        }\n        catch (_oO) {\n            source.target = '<unknown>';\n        }\n        try {\n            source.currentTarget = isElement(value.currentTarget)\n                ? htmlTreeAsString(value.currentTarget)\n                : Object.prototype.toString.call(value.currentTarget);\n        }\n        catch (_oO) {\n            source.currentTarget = '<unknown>';\n        }\n        // tslint:disable-next-line:strict-type-predicates\n        if (typeof CustomEvent !== 'undefined' && value instanceof CustomEvent) {\n            source.detail = value.detail;\n        }\n        for (var i in value) {\n            if (Object.prototype.hasOwnProperty.call(value, i)) {\n                source[i] = value[i];\n            }\n        }\n        return source;\n    }\n    return value;\n}\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nexport function normalizeToSize(object, \n// Default Node.js REPL depth\ndepth, \n// 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n    if (depth === void 0) { depth = 3; }\n    if (maxSize === void 0) { maxSize = 100 * 1024; }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n        return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n}\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n        return value;\n    }\n    if (type === '[object Object]') {\n        return '[Object]';\n    }\n    if (type === '[object Array]') {\n        return '[Array]';\n    }\n    var normalized = normalizeValue(value);\n    return isPrimitive(normalized) ? normalized : type;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n        return '[SyntheticEvent]';\n    }\n    // tslint:disable-next-line:no-tautology-expression\n    if (typeof value === 'number' && value !== value) {\n        return '[NaN]';\n    }\n    if (value === void 0) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n    }\n    return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key, value, depth, memo) {\n    if (depth === void 0) { depth = +Infinity; }\n    if (memo === void 0) { memo = new Memo(); }\n    // If we reach the maximum depth, serialize whatever has left\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    // If value implements `toJSON` method, call it and return early\n    // tslint:disable:no-unsafe-any\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n        return value.toJSON();\n    }\n    // tslint:enable:no-unsafe-any\n    // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n    var normalized = normalizeValue(value, key);\n    if (isPrimitive(normalized)) {\n        return normalized;\n    }\n    // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n    var source = getWalkSource(value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memo.memoize(value)) {\n        return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n        // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n        if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n            continue;\n        }\n        // Recursively walk through all the child nodes\n        acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    memo.unmemoize(value);\n    // Return accumulated values\n    return acc;\n}\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input, depth) {\n    try {\n        // tslint:disable-next-line:no-unsafe-any\n        return JSON.parse(JSON.stringify(input, function (key, value) { return walk(key, value, depth); }));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    // tslint:disable:strict-type-predicates\n    var keys = Object.keys(getWalkSource(exception));\n    keys.sort();\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return truncate(serialized, maxLength);\n    }\n    return '';\n}\n//# sourceMappingURL=object.js.map","import { consoleSandbox, getGlobalObject } from './misc';\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.log(PREFIX + \"[Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.warn(PREFIX + \"[Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.error(PREFIX + \"[Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexport { logger };\n//# sourceMappingURL=logger.js.map","/// <reference lib=\"dom\" />\nimport { isString } from './is';\n/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod, request) {\n    // tslint:disable-next-line: no-unsafe-any\n    return mod.require(request);\n}\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined'\n            ? window\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // tslint:disable-next-line:no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // tslint:disable-next-line:no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n}\n/** JSDoc */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry__) {\n            wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type) {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(event, mechanism) {\n    if (mechanism === void 0) { mechanism = {}; }\n    // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n    try {\n        // @ts-ignore\n        // tslint:disable:no-non-null-assertion\n        event.exception.values[0].mechanism = event.exception.values[0].mechanism || {};\n        Object.keys(mechanism).forEach(function (key) {\n            // @ts-ignore\n            event.exception.values[0].mechanism[key] = mechanism[key];\n        });\n    }\n    catch (_oO) {\n        // no-empty\n    }\n}\n/**\n * A safe form of location.href\n */\nexport function getLocationHref() {\n    try {\n        return document.location.href;\n    }\n    catch (oO) {\n        return '';\n    }\n}\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem) {\n    // try/catch both:\n    // - accessing event.target (see getsentry/raven-js#838, #768)\n    // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n    // - can throw an exception in some circumstances.\n    try {\n        var currentElem = elem;\n        var MAX_TRAVERSE_HEIGHT = 5;\n        var MAX_OUTPUT_LEN = 80;\n        var out = [];\n        var height = 0;\n        var len = 0;\n        var separator = ' > ';\n        var sepLength = separator.length;\n        var nextStr = void 0;\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n            nextStr = _htmlElementAsString(currentElem);\n            // bail out if\n            // - nextStr is the 'html' element\n            // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n            //   (ignore this limit if we are on the first iteration)\n            if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n                break;\n            }\n            out.push(nextStr);\n            len += nextStr.length;\n            currentElem = currentElem.parentNode;\n        }\n        return out.reverse().join(separator);\n    }\n    catch (_oO) {\n        return '<unknown>';\n    }\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(elem) {\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\n//# sourceMappingURL=misc.js.map","/// <reference lib=\"dom\" />\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return wat instanceof Error;\n    }\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat) {\n    // tslint:disable-next-line:strict-type-predicates\n    return typeof Event !== 'undefined' && wat instanceof Event;\n}\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat) {\n    // tslint:disable-next-line:strict-type-predicates\n    return typeof Element !== 'undefined' && wat instanceof Element;\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat) {\n    // tslint:disable:no-unsafe-any\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n    // tslint:enable:no-unsafe-any\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat) {\n    // tslint:disable-next-line:no-unsafe-any\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n//# sourceMappingURL=is.js.map","import { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(executor) {\n        var _this = this;\n        this._state = States.PENDING;\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(States.RESOLVED, value);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(States.REJECTED, reason);\n        };\n        /** JSDoc */\n        this._setResult = function (state, value) {\n            if (_this._state !== States.PENDING) {\n                return;\n            }\n            if (isThenable(value)) {\n                value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._state = state;\n            _this._value = value;\n            _this._executeHandlers();\n        };\n        // TODO: FIXME\n        /** JSDoc */\n        this._attachHandler = function (handler) {\n            _this._handlers = _this._handlers.concat(handler);\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === States.PENDING) {\n                return;\n            }\n            if (_this._state === States.REJECTED) {\n                _this._handlers.forEach(function (handler) {\n                    if (handler.onrejected) {\n                        handler.onrejected(_this._value);\n                    }\n                });\n            }\n            else {\n                _this._handlers.forEach(function (handler) {\n                    if (handler.onfulfilled) {\n                        // tslint:disable-next-line:no-unsafe-any\n                        handler.onfulfilled(_this._value);\n                    }\n                });\n            }\n            _this._handlers = [];\n        };\n        try {\n            executor(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n        return '[object SyncPromise]';\n    };\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n        return new SyncPromise(function (resolve) {\n            resolve(value);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n        return new SyncPromise(function (_, reject) {\n            reject(reason);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.all = function (collection) {\n        return new SyncPromise(function (resolve, reject) {\n            if (!Array.isArray(collection)) {\n                reject(new TypeError(\"Promise.all requires an array as input.\"));\n                return;\n            }\n            if (collection.length === 0) {\n                resolve([]);\n                return;\n            }\n            var counter = collection.length;\n            var resolvedCollection = [];\n            collection.forEach(function (item, index) {\n                SyncPromise.resolve(item)\n                    .then(function (value) {\n                    resolvedCollection[index] = value;\n                    counter -= 1;\n                    if (counter !== 0) {\n                        return;\n                    }\n                    resolve(resolvedCollection);\n                })\n                    .then(null, reject);\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            _this._attachHandler({\n                onfulfilled: function (result) {\n                    if (!onfulfilled) {\n                        // TODO: ¯\\_(ツ)_/¯\n                        // TODO: FIXME\n                        resolve(result);\n                        return;\n                    }\n                    try {\n                        resolve(onfulfilled(result));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n                onrejected: function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                        return;\n                    }\n                    try {\n                        resolve(onrejected(reason));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onrejected) {\n        return this.then(function (val) { return val; }, onrejected);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.finally = function (onfinally) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            var val;\n            var isRejected;\n            return _this.then(function (value) {\n                isRejected = false;\n                val = value;\n                if (onfinally) {\n                    onfinally();\n                }\n            }, function (reason) {\n                isRejected = true;\n                val = reason;\n                if (onfinally) {\n                    onfinally();\n                }\n            }).then(function () {\n                if (isRejected) {\n                    reject(val);\n                    return;\n                }\n                // tslint:disable-next-line:no-unsafe-any\n                resolve(val);\n            });\n        });\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map","import * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\nimport { Span } from './span';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._context = {};\n    }\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            setTimeout(function () {\n                _this._scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this._notifyingListeners = false;\n            });\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            // tslint:disable-next-line:strict-type-predicates\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(tslib_1.__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .then(null, reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .then(null, reject);\n                }\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = normalize(user);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = tslib_1.__assign({}, this._tags, normalize(tags));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = tslib_1.__assign({}, this._tags, (_a = {}, _a[key] = normalize(value), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extra) {\n        this._extra = tslib_1.__assign({}, this._extra, normalize(extra));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = tslib_1.__assign({}, this._extra, (_a = {}, _a[key] = normalize(extra), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = normalize(fingerprint);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = normalize(level);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransaction = function (transaction) {\n        this._transaction = transaction;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (name, context) {\n        this._context[name] = context ? normalize(context) : undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.startSpan = function (parentSpan) {\n        var span = new Span();\n        span.setParent(parentSpan);\n        this.setSpan(span);\n        return span;\n    };\n    /**\n     * Internal getter for Span, used in Hub.\n     * @hidden\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        if (scope) {\n            newScope._breadcrumbs = tslib_1.__spread(scope._breadcrumbs);\n            newScope._tags = tslib_1.__assign({}, scope._tags);\n            newScope._extra = tslib_1.__assign({}, scope._extra);\n            newScope._context = tslib_1.__assign({}, scope._context);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._transaction = scope._transaction;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = tslib_1.__spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._context = {};\n        this._level = undefined;\n        this._transaction = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = tslib_1.__assign({}, this._extra, event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = tslib_1.__assign({}, this._tags, event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = tslib_1.__assign({}, this._user, event.user);\n        }\n        if (this._context && Object.keys(this._context).length) {\n            event.contexts = tslib_1.__assign({}, this._context, event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transaction) {\n            event.transaction = this._transaction;\n        }\n        if (this._span) {\n            event.contexts = event.contexts || {};\n            event.contexts.trace = this._span;\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = tslib_1.__spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(tslib_1.__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","/** The status of an event. */\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // tslint:disable-next-line:no-unsafe-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\nexport function captureException(exception) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, level) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureMessage', message, level, {\n        originalException: message,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normailzed.\n */\nexport function setContext(name, context) {\n    callOnHub('setContext', name, context);\n}\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras) {\n    callOnHub('setExtras', extras);\n}\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags) {\n    callOnHub('setTags', tags);\n}\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normailzed.\n */\nexport function setExtra(key, extra) {\n    callOnHub('setExtra', key, extra);\n}\n/**\n * Set key:value that will be sent as tags data with the event.\n * @param key String key of tag\n * @param value String value of tag\n */\nexport function setTag(key, value) {\n    callOnHub('setTag', key, value);\n}\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user) {\n    callOnHub('setUser', user);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n */\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['_invokeClient', method], args));\n}\n//# sourceMappingURL=index.js.map","export var setPrototypeOf = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n/**\n * setPrototypeOf polyfill using __proto__\n */\nfunction setProtoOf(obj, proto) {\n    // @ts-ignore\n    obj.__proto__ = proto;\n    return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\nfunction mixinProperties(obj, proto) {\n    for (var prop in proto) {\n        if (!obj.hasOwnProperty(prop)) {\n            // @ts-ignore\n            obj[prop] = proto[prop];\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=polyfill.js.map","import * as tslib_1 from \"tslib\";\nimport { setPrototypeOf } from './polyfill';\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","import * as tslib_1 from \"tslib\";\nimport { SentryError } from '@sentry/utils';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private _representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        this._fromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE);\n            }\n        });\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        if (this.port && isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { urlEncode } from '@sentry/utils';\nimport { Dsn } from './dsn';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_timestamp=\" + new Date().getTime());\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        return tslib_1.__spread(defaultIntegrations);\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { Dsn } from './dsn';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Array of used integrations. */\n        this._integrations = {};\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n        if (this._isEnabled()) {\n            this._integrations = setupIntegrations(this._options);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (status) {\n            clearInterval(status.interval);\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return status.ready && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this._integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            var interval = 0;\n            clearInterval(interval);\n            interval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve({\n                        interval: interval,\n                        ready: true,\n                    });\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve({\n                            interval: interval,\n                            ready: false,\n                        });\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result;\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint)\n                .then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                try {\n                    var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                    if (isInternalException || !beforeSend) {\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                        return;\n                    }\n                    var beforeSendResult = beforeSend(prepared, hint);\n                    if (typeof beforeSendResult === 'undefined') {\n                        logger.error('`beforeSend` method has to return `null` or a valid event.');\n                    }\n                    else if (isThenable(beforeSendResult)) {\n                        _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                    }\n                    else {\n                        finalEvent = beforeSendResult;\n                        if (finalEvent === null) {\n                            logger.log('`beforeSend` returned `null`, will not send event.');\n                            resolve(null);\n                            return;\n                        }\n                        // From here on we are really async\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                    }\n                }\n                catch (exception) {\n                    _this.captureException(exception, {\n                        data: {\n                            __sentry__: true,\n                        },\n                        originalException: exception,\n                    });\n                    reject('`beforeSend` threw an error, will not send event.');\n                }\n            })\n                .then(null, function () {\n                reject('`beforeSend` threw an error, will not send event.');\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .then(null, function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","import { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return SyncPromise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return SyncPromise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).then(null, function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var isNativeFunc = function (func) { return func.toString().indexOf('native') !== -1; };\n    var global = getGlobalObject();\n    var result = null;\n    var doc = global.document;\n    if (doc) {\n        var sandbox = doc.createElement('iframe');\n        sandbox.hidden = true;\n        try {\n            doc.head.appendChild(sandbox);\n            if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                // tslint:disable-next-line no-unbound-method\n                result = isNativeFunc(sandbox.contentWindow.fetch);\n            }\n            doc.head.removeChild(sandbox);\n        }\n        catch (err) {\n            logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n        }\n    }\n    if (result === null) {\n        // tslint:disable-next-line no-unbound-method\n        result = isNativeFunc(global.fetch);\n    }\n    return result;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    // tslint:disable-next-line: no-unsafe-any\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","// tslint:disable:object-literal-sort-keys\nimport * as tslib_1 from \"tslib\";\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[-a-z]+:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n/** JSDoc */\nexport function computeStackTrace(ex) {\n    // tslint:disable:no-unsafe-any\n    var stack = null;\n    var popSize = ex && ex.framesToPop;\n    try {\n        // This must be tried first because Opera 10 *destroys*\n        // its stacktrace property if you try to access the stack\n        // property first!!\n        stack = computeStackTraceFromStacktraceProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        stack = computeStackTraceFromStackProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex && ex.name,\n        stack: [],\n        failed: true,\n    };\n}\n/** JSDoc */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction computeStackTraceFromStackProp(ex) {\n    // tslint:disable:no-conditional-assignment\n    if (!ex || !ex.stack) {\n        return null;\n    }\n    var stack = [];\n    var lines = ex.stack.split('\\n');\n    var isEval;\n    var submatch;\n    var parts;\n    var element;\n    for (var i = 0; i < lines.length; ++i) {\n        if ((parts = chrome.exec(lines[i]))) {\n            var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n            isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n            if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                // throw out eval line/column and use top-most line/column number\n                parts[2] = submatch[1]; // url\n                parts[3] = submatch[2]; // line\n                parts[4] = submatch[3]; // column\n            }\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: isNative ? [parts[2]] : [],\n                line: parts[3] ? +parts[3] : null,\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = winjs.exec(lines[i]))) {\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: [],\n                line: +parts[3],\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = gecko.exec(lines[i]))) {\n            isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n            if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                // throw out eval line/column and use top-most line number\n                parts[1] = parts[1] || \"eval\";\n                parts[3] = submatch[1];\n                parts[4] = submatch[2];\n                parts[5] = ''; // no column when eval\n            }\n            else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                // FireFox uses this awesome columnNumber property for its top frame\n                // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                // so adding 1\n                // NOTE: this hack doesn't work if top-most frame is eval\n                stack[0].column = ex.columnNumber + 1;\n            }\n            element = {\n                url: parts[3],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: parts[2] ? parts[2].split(',') : [],\n                line: parts[4] ? +parts[4] : null,\n                column: parts[5] ? +parts[5] : null,\n            };\n        }\n        else {\n            continue;\n        }\n        if (!element.func && element.line) {\n            element.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(element);\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** JSDoc */\nfunction computeStackTraceFromStacktraceProp(ex) {\n    if (!ex || !ex.stacktrace) {\n        return null;\n    }\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n    var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n    var lines = stacktrace.split('\\n');\n    var stack = [];\n    var parts;\n    for (var line = 0; line < lines.length; line += 2) {\n        // tslint:disable:no-conditional-assignment\n        var element = null;\n        if ((parts = opera10Regex.exec(lines[line]))) {\n            element = {\n                url: parts[2],\n                func: parts[3],\n                args: [],\n                line: +parts[1],\n                column: null,\n            };\n        }\n        else if ((parts = opera11Regex.exec(lines[line]))) {\n            element = {\n                url: parts[6],\n                func: parts[3] || parts[4],\n                args: parts[5] ? parts[5].split(',') : [],\n                line: +parts[1],\n                column: +parts[2],\n            };\n        }\n        if (element) {\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            stack.push(element);\n        }\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace, popSize) {\n    try {\n        return tslib_1.__assign({}, stacktrace, { stack: stacktrace.stack.slice(popSize) });\n    }\n    catch (e) {\n        return stacktrace;\n    }\n}\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n    var message = ex && ex.message;\n    if (!message) {\n        return 'No error message';\n    }\n    if (message.error && typeof message.error.message === 'string') {\n        return message.error.message;\n    }\n    return message;\n}\n//# sourceMappingURL=tracekit.js.map","import { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\nimport { computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n                    value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + extractExceptionKeysForMessage(exception),\n                },\n            ],\n        },\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n    };\n    if (syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { addExceptionMechanism, addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isEvent, isPlainObject, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n/** JSDoc */\nexport function eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event;\n    if (isErrorEvent(exception) && exception.error) {\n        // If it is an ErrorEvent with `error` property, extract it to get actual Error\n        var errorEvent = exception;\n        exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isDOMError(exception) || isDOMException(exception)) {\n        // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n        // then we just extract the name and message, as they don't provide anything else\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n        var domException = exception;\n        var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n        var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n        event = eventFromString(message, syntheticException, options);\n        addExceptionTypeValue(event, message);\n        return event;\n    }\n    if (isError(exception)) {\n        // we have a real Error object, do nothing\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isPlainObject(exception) || isEvent(exception)) {\n        // If it is plain Object or Event, serialize it manually and extract options\n        // This will allow us to group events based on top-level keys\n        // which is much better than creating new group when any key/value change\n        var objectException = exception;\n        event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n        addExceptionMechanism(event, {\n            synthetic: true,\n        });\n        return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    addExceptionTypeValue(event, \"\" + exception, undefined);\n    addExceptionMechanism(event, {\n        synthetic: true,\n    });\n    return event;\n}\n// this._options.attachStacktrace\n/** JSDoc */\nexport function eventFromString(input, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event = {\n        message: input,\n    };\n    if (options.attachStacktrace && syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n//# sourceMappingURL=eventbuilder.js.map","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .then(null, function () {\n            return _this.remove(task).then(null, function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            SyncPromise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .then(null, function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry__ ? this.__sentry_original__ : this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        return this._buffer.add(global.fetch(this.url, defaultOptions).then(function (response) { return ({\n            status: Status.fromHttpCode(response.status),\n        }); }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                if (request.status === 200) {\n                    resolve({\n                        status: Status.fromHttpCode(request.status),\n                    });\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, supportsFetch, SyncPromise } from '@sentry/utils';\nimport { eventFromString, eventFromUnknownInput } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = tslib_1.__assign({}, this._options.transportOptions, { dsn: this._options.dsn });\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromUnknownInput(exception, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        addExceptionMechanism(event, {\n            handled: true,\n            type: 'generic',\n        });\n        event.level = Severity.Error;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var syntheticException = (hint && hint.syntheticException) || undefined;\n        var event = eventFromString(message, syntheticException, {\n            attachStacktrace: this._options.attachStacktrace,\n        });\n        event.level = level;\n        if (hint && hint.event_id) {\n            event.event_id = hint.event_id;\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.7.1';\n//# sourceMappingURL=version.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            // tslint:disable-next-line:no-unsafe-any\n            return event.exception.values[0].type === 'SentryError';\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                var _a = event.exception.values[0], type = _a.type, value = _a.value;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                // tslint:disable:no-unsafe-any\n                var frames_1 = event.stacktrace.frames;\n                return frames_1[frames_1.length - 1].filename;\n            }\n            if (event.exception) {\n                // tslint:disable:no-unsafe-any\n                var frames_2 = event.exception.values[0].stacktrace.frames;\n                return frames_2[frames_2.length - 1].filename;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, htmlTreeAsString, normalize } from '@sentry/utils';\nvar debounceDuration = 1000;\nvar keypressTimeout;\nvar lastCapturedEvent;\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        // tslint:disable-next-line:strict-type-predicates\n        if (before && typeof before === 'function') {\n            before.apply(this, arguments);\n        }\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                // Attempt to invoke user-land function\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n                //       means the sentry.javascript SDK caught an error invoking your application code. This\n                //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined);\n                        addExceptionMechanism(processedEvent, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: normalize(args, 3) });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n        if (descriptor.configurable) {\n            Object.defineProperty(sentryWrapped, 'name', {\n                get: function () {\n                    return fn.name;\n                },\n            });\n        }\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\nvar debounceTimer = 0;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nexport function breadcrumbEventHandler(eventName, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        var captureBreadcrumb = function () {\n            var target;\n            // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n            try {\n                target = event.target ? htmlTreeAsString(event.target) : htmlTreeAsString(event);\n            }\n            catch (e) {\n                target = '<unknown>';\n            }\n            if (target.length === 0) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: \"ui.\" + eventName,\n                message: target,\n            }, {\n                event: event,\n                name: eventName,\n            });\n        };\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(captureBreadcrumb);\n        }\n        else {\n            captureBreadcrumb();\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\nexport function keypressEventHandler() {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            breadcrumbEventHandler('input')(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\n//# sourceMappingURL=helpers.js.map","import { fill, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    // tslint:disable-next-line:no-unbound-method strict-type-predicates\n                    if (typeof fn.handleEvent === 'function') {\n                        fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                            mechanism: {\n                                data: {\n                                    function: 'handleEvent',\n                                    handler: getFunctionName(fn),\n                                    target: target,\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    }\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n    try {\n        return (fn && fn.name) || '<anonymous>';\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        return '<anonymous>';\n    }\n}\n//# sourceMappingURL=trycatch.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { fill, getEventDescription, getGlobalObject, isString, logger, normalize, parseUrl, safeJoin, supportsHistory, supportsNativeFetch, } from '@sentry/utils';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\nvar global = getGlobalObject();\nvar lastHref;\n/** Default Breadcrumbs instrumentations */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentConsole = function () {\n        if (!('console' in global)) {\n            return;\n        }\n        ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n            if (!(level in global.console)) {\n                return;\n            }\n            fill(global.console, level, function (originalConsoleLevel) {\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var breadcrumbData = {\n                        category: 'console',\n                        data: {\n                            extra: {\n                                arguments: normalize(args, 3),\n                            },\n                            logger: 'console',\n                        },\n                        level: Severity.fromString(level),\n                        message: safeJoin(args, ' '),\n                    };\n                    if (level === 'assert') {\n                        if (args[0] === false) {\n                            breadcrumbData.message = \"Assertion failed: \" + (safeJoin(args.slice(1), ' ') || 'console.assert');\n                            breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n                            Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                                input: args,\n                                level: level,\n                            });\n                        }\n                    }\n                    else {\n                        Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                            input: args,\n                            level: level,\n                        });\n                    }\n                    // this fails for some browsers. :(\n                    if (originalConsoleLevel) {\n                        Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                    }\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentDOM = function () {\n        if (!('document' in global)) {\n            return;\n        }\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n        global.document.addEventListener('keypress', keypressEventHandler(), false);\n        // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n        ['EventTarget', 'Node'].forEach(function (target) {\n            var proto = global[target] && global[target].prototype;\n            if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n                return;\n            }\n            fill(proto, 'addEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    if (fn && fn.handleEvent) {\n                        if (eventName === 'click') {\n                            fill(fn, 'handleEvent', function (innerOriginal) {\n                                return function (event) {\n                                    breadcrumbEventHandler('click')(event);\n                                    return innerOriginal.call(this, event);\n                                };\n                            });\n                        }\n                        if (eventName === 'keypress') {\n                            fill(fn, 'handleEvent', function (innerOriginal) {\n                                return function (event) {\n                                    keypressEventHandler()(event);\n                                    return innerOriginal.call(this, event);\n                                };\n                            });\n                        }\n                    }\n                    else {\n                        if (eventName === 'click') {\n                            breadcrumbEventHandler('click', true)(this);\n                        }\n                        if (eventName === 'keypress') {\n                            keypressEventHandler()(this);\n                        }\n                    }\n                    return original.call(this, eventName, fn, options);\n                };\n            });\n            fill(proto, 'removeEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    var callback = fn;\n                    try {\n                        callback = callback && (callback.__sentry_wrapped__ || callback);\n                    }\n                    catch (e) {\n                        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                    }\n                    return original.call(this, eventName, callback, options);\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentFetch = function () {\n        if (!supportsNativeFetch()) {\n            return;\n        }\n        fill(global, 'fetch', function (originalFetch) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var fetchInput = args[0];\n                var method = 'GET';\n                var url;\n                if (typeof fetchInput === 'string') {\n                    url = fetchInput;\n                }\n                else if ('Request' in global && fetchInput instanceof Request) {\n                    url = fetchInput.url;\n                    if (fetchInput.method) {\n                        method = fetchInput.method;\n                    }\n                }\n                else {\n                    url = String(fetchInput);\n                }\n                if (args[1] && args[1].method) {\n                    method = args[1].method;\n                }\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (filterUrl && url.indexOf(filterUrl) !== -1) {\n                        if (method === 'POST' && args[1] && args[1].body) {\n                            addSentryBreadcrumb(args[1].body);\n                        }\n                        return originalFetch.apply(global, args);\n                    }\n                }\n                var fetchData = {\n                    method: isString(method) ? method.toUpperCase() : method,\n                    url: url,\n                };\n                return originalFetch\n                    .apply(global, args)\n                    .then(function (response) {\n                    fetchData.status_code = response.status;\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        type: 'http',\n                    }, {\n                        input: args,\n                        response: response,\n                    });\n                    return response;\n                })\n                    .then(null, function (error) {\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        level: Severity.Error,\n                        type: 'http',\n                    }, {\n                        error: error,\n                        input: args,\n                    });\n                    throw error;\n                });\n            };\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentHistory = function () {\n        var _this = this;\n        if (!supportsHistory()) {\n            return;\n        }\n        var captureUrlChange = function (from, to) {\n            var parsedLoc = parseUrl(global.location.href);\n            var parsedTo = parseUrl(to);\n            var parsedFrom = parseUrl(from);\n            // Initial pushState doesn't provide `from` information\n            if (!parsedFrom.path) {\n                parsedFrom = parsedLoc;\n            }\n            // because onpopstate only tells you the \"new\" (to) value of location.href, and\n            // not the previous (from) value, we need to track the value of the current URL\n            // state ourselves\n            lastHref = to;\n            // Use only the path component of the URL if the URL matches the current\n            // document (almost all the time when using pushState)\n            if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                to = parsedTo.relative;\n            }\n            if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                from = parsedFrom.relative;\n            }\n            Breadcrumbs.addBreadcrumb({\n                category: 'navigation',\n                data: {\n                    from: from,\n                    to: to,\n                },\n            });\n        };\n        // record navigation (URL) changes\n        var oldOnPopState = global.onpopstate;\n        global.onpopstate = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var currentHref = global.location.href;\n            captureUrlChange(lastHref, currentHref);\n            if (oldOnPopState) {\n                return oldOnPopState.apply(_this, args);\n            }\n        };\n        /**\n         * @hidden\n         */\n        function historyReplacementFunction(originalHistoryFunction) {\n            // note history.pushState.length is 0; intentionally not declaring\n            // params to preserve 0 arity\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args.length > 2 ? args[2] : undefined;\n                // url argument is optional\n                if (url) {\n                    // coerce to string (this is what pushState does)\n                    captureUrlChange(lastHref, String(url));\n                }\n                return originalHistoryFunction.apply(this, args);\n            };\n        }\n        fill(global.history, 'pushState', historyReplacementFunction);\n        fill(global.history, 'replaceState', historyReplacementFunction);\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentXHR = function () {\n        if (!('XMLHttpRequest' in global)) {\n            return;\n        }\n        /**\n         * @hidden\n         */\n        function wrapProp(prop, xhr) {\n            if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n                    return wrap(original, {\n                        mechanism: {\n                            data: {\n                                function: prop,\n                                handler: (original && original.name) || '<anonymous>',\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                });\n            }\n        }\n        var xhrproto = XMLHttpRequest.prototype;\n        fill(xhrproto, 'open', function (originalOpen) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args[1];\n                this.__sentry_xhr__ = {\n                    method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n                    url: args[1],\n                };\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (isString(url) && (filterUrl && url.indexOf(filterUrl) !== -1)) {\n                        this.__sentry_own_request__ = true;\n                    }\n                }\n                return originalOpen.apply(this, args);\n            };\n        });\n        fill(xhrproto, 'send', function (originalSend) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var xhr = this; // tslint:disable-line:no-this-assignment\n                if (xhr.__sentry_own_request__) {\n                    addSentryBreadcrumb(args[0]);\n                }\n                /**\n                 * @hidden\n                 */\n                function onreadystatechangeHandler() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.__sentry_own_request__) {\n                            return;\n                        }\n                        try {\n                            // touching statusCode in some platforms throws\n                            // an exception\n                            if (xhr.__sentry_xhr__) {\n                                xhr.__sentry_xhr__.status_code = xhr.status;\n                            }\n                        }\n                        catch (e) {\n                            /* do nothing */\n                        }\n                        Breadcrumbs.addBreadcrumb({\n                            category: 'xhr',\n                            data: xhr.__sentry_xhr__,\n                            type: 'http',\n                        }, {\n                            xhr: xhr,\n                        });\n                    }\n                }\n                var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress'];\n                xmlHttpRequestProps.forEach(function (prop) {\n                    wrapProp(prop, xhr);\n                });\n                if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                    fill(xhr, 'onreadystatechange', function (original) {\n                        return wrap(original, {\n                            mechanism: {\n                                data: {\n                                    function: 'onreadystatechange',\n                                    handler: (original && original.name) || '<anonymous>',\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        }, onreadystatechangeHandler);\n                    });\n                }\n                else {\n                    // if onreadystatechange wasn't actually set by the page on this xhr, we\n                    // are free to set our own and capture the breadcrumb\n                    xhr.onreadystatechange = onreadystatechangeHandler;\n                }\n                return originalSend.apply(this, args);\n            };\n        });\n    };\n    /**\n     * Helper that checks if integration is enabled on the client.\n     * @param breadcrumb Breadcrumb\n     * @param hint BreadcrumbHint\n     */\n    Breadcrumbs.addBreadcrumb = function (breadcrumb, hint) {\n        if (getCurrentHub().getIntegration(Breadcrumbs)) {\n            getCurrentHub().addBreadcrumb(breadcrumb, hint);\n        }\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        if (this._options.console) {\n            this._instrumentConsole();\n        }\n        if (this._options.dom) {\n            this._instrumentDOM();\n        }\n        if (this._options.xhr) {\n            this._instrumentXHR();\n        }\n        if (this._options.fetch) {\n            this._instrumentFetch();\n        }\n        if (this._options.history) {\n            this._instrumentHistory();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        Breadcrumbs.addBreadcrumb({\n            category: 'sentry',\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, getGlobalObject, getLocationHref, isErrorEvent, isPrimitive, isString, logger, } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        /** JSDoc */\n        this._global = getGlobalObject();\n        /** JSDoc */\n        this._oldOnErrorHandler = null;\n        /** JSDoc */\n        this._oldOnUnhandledRejectionHandler = null;\n        /** JSDoc */\n        this._onErrorHandlerInstalled = false;\n        /** JSDoc */\n        this._onUnhandledRejectionHandlerInstalled = false;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            this._installGlobalOnErrorHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            this._installGlobalOnUnhandledRejectionHandler();\n        }\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n        if (this._onErrorHandlerInstalled) {\n            return;\n        }\n        var self = this; // tslint:disable-line:no-this-assignment\n        this._oldOnErrorHandler = this._global.onerror;\n        this._global.onerror = function (msg, url, line, column, error) {\n            var currentHub = getCurrentHub();\n            var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n            var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n            if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                if (self._oldOnErrorHandler) {\n                    return self._oldOnErrorHandler.apply(this, arguments);\n                }\n                return false;\n            }\n            var client = currentHub.getClient();\n            var event = isPrimitive(error)\n                ? self._eventFromIncompleteOnError(msg, url, line, column)\n                : self._enhanceEventWithInitialFrame(eventFromUnknownInput(error, undefined, {\n                    attachStacktrace: client && client.getOptions().attachStacktrace,\n                    rejection: false,\n                }), url, line, column);\n            addExceptionMechanism(event, {\n                handled: false,\n                type: 'onerror',\n            });\n            currentHub.captureEvent(event, {\n                originalException: error,\n            });\n            if (self._oldOnErrorHandler) {\n                return self._oldOnErrorHandler.apply(this, arguments);\n            }\n            return false;\n        };\n        this._onErrorHandlerInstalled = true;\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n        if (this._onUnhandledRejectionHandlerInstalled) {\n            return;\n        }\n        var self = this; // tslint:disable-line:no-this-assignment\n        this._oldOnUnhandledRejectionHandler = this._global.onunhandledrejection;\n        this._global.onunhandledrejection = function (e) {\n            var error = e;\n            try {\n                error = e && 'reason' in e ? e.reason : e;\n            }\n            catch (_oO) {\n                // no-empty\n            }\n            var currentHub = getCurrentHub();\n            var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n            var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n            if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                if (self._oldOnUnhandledRejectionHandler) {\n                    return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n                }\n                return false;\n            }\n            var client = currentHub.getClient();\n            var event = isPrimitive(error)\n                ? self._eventFromIncompleteRejection(error)\n                : eventFromUnknownInput(error, undefined, {\n                    attachStacktrace: client && client.getOptions().attachStacktrace,\n                    rejection: true,\n                });\n            event.level = Severity.Error;\n            addExceptionMechanism(event, {\n                handled: false,\n                type: 'onunhandledrejection',\n            });\n            currentHub.captureEvent(event, {\n                originalException: error,\n            });\n            if (self._oldOnUnhandledRejectionHandler) {\n                return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n            }\n            return false;\n        };\n        this._onUnhandledRejectionHandlerInstalled = true;\n    };\n    /**\n     * This function creates a stack from an old, error-less onerror handler.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n        var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n        // If 'message' is ErrorEvent, get real message from inside\n        var message = isErrorEvent(msg) ? msg.message : msg;\n        var name;\n        if (isString(message)) {\n            var groups = message.match(ERROR_TYPES_RE);\n            if (groups) {\n                name = groups[1];\n                message = groups[2];\n            }\n        }\n        var event = {\n            exception: {\n                values: [\n                    {\n                        type: name || 'Error',\n                        value: message,\n                    },\n                ],\n            },\n        };\n        return this._enhanceEventWithInitialFrame(event, url, line, column);\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n     */\n    GlobalHandlers.prototype._eventFromIncompleteRejection = function (error) {\n        return {\n            exception: {\n                values: [\n                    {\n                        type: 'UnhandledRejection',\n                        value: \"Non-Error promise rejection captured with value: \" + error,\n                    },\n                ],\n            },\n        };\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n        event.exception = event.exception || {};\n        event.exception.values = event.exception.values || [];\n        event.exception.values[0] = event.exception.values[0] || {};\n        event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n        if (event.exception.values[0].stacktrace.frames.length === 0) {\n            event.exception.values[0].stacktrace.frames.push({\n                colno: column,\n                filename: url || getLocationHref(),\n                function: '?',\n                in_app: true,\n                lineno: line,\n            });\n        }\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // Request Interface: https://docs.sentry.io/development/sdk-dev/event-payloads/request/\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    if (options.release === undefined) {\n        var window_1 = getGlobalObject();\n        // This supports the variable that sentry-webpack-plugin injects\n        if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n            options.release = window_1.SENTRY_RELEASE.id;\n        }\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn) {\n    // tslint:disable-next-line: no-unsafe-any\n    return internalWrap(fn)();\n}\n//# sourceMappingURL=sdk.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    getCurrentHub().bindClient(new clientClass(options));\n}\n//# sourceMappingURL=sdk.js.map","import * as tslib_1 from \"tslib\";\nexport { Severity, Status, } from '@sentry/types';\nexport { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, getHubFromCarrier, getCurrentHub, Hub, Scope, setContext, setExtra, setExtras, setTag, setTags, setUser, Span, withScope, } from '@sentry/core';\nexport { BrowserClient } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {};\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nvar _window = getGlobalObject();\nif (_window.Sentry && _window.Sentry.Integrations) {\n    windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\nexport { INTEGRATIONS as Integrations, Transports };\n//# sourceMappingURL=index.js.map","import { uuid4 } from '@sentry/utils';\nexport var TRACEPARENT_REGEXP = /^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$/;\n/**\n * Span containg all data about a span\n */\nvar Span = /** @class */ (function () {\n    function Span(_traceId, _spanId, _sampled, _parent) {\n        if (_traceId === void 0) { _traceId = uuid4(); }\n        if (_spanId === void 0) { _spanId = uuid4().substring(16); }\n        this._traceId = _traceId;\n        this._spanId = _spanId;\n        this._sampled = _sampled;\n        this._parent = _parent;\n    }\n    /**\n     * Setter for parent\n     */\n    Span.prototype.setParent = function (parent) {\n        this._parent = parent;\n        return this;\n    };\n    /**\n     * Setter for sampled\n     */\n    Span.prototype.setSampled = function (sampled) {\n        this._sampled = sampled;\n        return this;\n    };\n    /**\n     * Continues a trace\n     * @param traceparent Traceparent string\n     */\n    Span.fromTraceparent = function (traceparent) {\n        var matches = traceparent.match(TRACEPARENT_REGEXP);\n        if (matches) {\n            var sampled = void 0;\n            if (matches[3] === '1') {\n                sampled = true;\n            }\n            else if (matches[3] === '0') {\n                sampled = false;\n            }\n            var parent_1 = new Span(matches[1], matches[2], sampled);\n            return new Span(matches[1], undefined, sampled, parent_1);\n        }\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toTraceparent = function () {\n        var sampled = '';\n        if (this._sampled === true) {\n            sampled = '-1';\n        }\n        else if (this._sampled === false) {\n            sampled = '-0';\n        }\n        return this._traceId + \"-\" + this._spanId + sampled;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toJSON = function () {\n        return {\n            parent: (this._parent && this._parent.toJSON()) || undefined,\n            sampled: this._sampled,\n            span_id: this._spanId,\n            trace_id: this._traceId,\n        };\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=span.js.map","import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, dynamicRequire, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 30;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [];\n        this._stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error('Sentry syntheticException');\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: exception,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureException', exception, tslib_1.__assign({}, finalHint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error(message);\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: message,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, finalHint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var top = this.getStackTop();\n        if (!top.scope || !top.client) {\n            return;\n        }\n        var _a = (top.client.getOptions && top.client.getOptions()) || {}, _b = _a.beforeBreadcrumb, beforeBreadcrumb = _b === void 0 ? null : _b, _c = _a.maxBreadcrumbs, maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setContext = function (name, context) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            callback(top.scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client) {\n            return null;\n        }\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            var span = top.scope.getSpan();\n            if (span) {\n                return {\n                    'sentry-trace': span.toTraceparent(),\n                };\n            }\n        }\n        return {};\n    };\n    return Hub;\n}());\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there (applicable only to Node environment)\n    if (isNodeEnv()) {\n        return getHubFromActiveDomain(registry);\n    }\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n}\n/**\n * Try to read the hub from an active domain, fallback to the registry if one doesnt exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n    try {\n        // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n        // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n        // for example so we do not have to shim it and use `getCurrentHub` universally.\n        var domain = dynamicRequire(module, 'domain');\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map"],"sourceRoot":"webpack:///"}